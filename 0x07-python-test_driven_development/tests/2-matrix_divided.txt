# Test cases for the matrix_divided function
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test case 1: Trying to divide the matrix by 0
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test case 2: Dividing matrix of all integers by 3
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test case 3: Dividing matrix of all floats by 3
>>> matrix = [
...     [1.2, 2.3, 3.4],
...     [4.5, 5.6, 6.7]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.4, 0.77, 1.13], [1.5, 1.87, 2.23]]

# Test case 4: Trying to divide matrix that have non equal rows
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6, 7]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test case 5: Trying to divide matrix that have a string in it
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, "School"]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
